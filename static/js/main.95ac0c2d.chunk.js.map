{"version":3,"sources":["index.js"],"names":["quotes","quote","author","MyApp","props","state","currentQuote","currentAuthor","attrib","handleChange","bind","getRandomQuote","encodeForTwitter","curQuote","Math","floor","random","length","this","setState","event","attr","addString","encodeURIComponent","console","log","id","className","href","title","onClick","React","Component","ReactDOM","render","document","getElementById"],"mappings":"4MAIUA,G,MAAS,CACf,CACIC,MAAO,oFACPC,OAAQ,iBAGZ,CACID,MAAO,yEACPC,OAAQ,2BAEZ,CACID,MAAO,oHACPC,OAAQ,WAEZ,CACID,MAAO,mGACPC,OAAQ,WAEZ,CACID,MAAO,qFACPC,OAAQ,uBAEZ,CACID,MAAO,kCACPC,OAAQ,mBAEZ,CACID,MAAO,iGACPC,OAAQ,eAEZ,CACID,MAAO,qEACPC,OAAQ,iBAEZ,CACID,MAAO,gDACPC,OAAQ,uBAEZ,CACID,MAAO,iGACPC,OAAQ,gBAEZ,CACID,MAAO,4EACPC,OAAQ,sBAINC,E,YACR,WAAYC,GAAQ,IAAD,8BACjB,4CAAMA,KACDC,MAAQ,CAChBC,aAAc,GACdC,cAAe,GACZC,OAAQ,IAGN,EAAKC,aAAe,EAAKA,aAAaC,KAAlB,gBACpB,EAAKC,eAAiB,EAAKA,eAAeD,KAApB,gBACtB,EAAKE,iBAAmB,EAAKA,iBAAiBF,KAAtB,gBAVT,E,8EAgBjB,IAAIG,EAAWb,EAAOc,KAAKC,MAAMD,KAAKE,SAAWhB,EAAOiB,SACxDC,KAAKC,SAAS,CACdb,aAAcO,EAASZ,MACvBM,cAAeM,EAASX,W,0CAMxBgB,KAAKP,mB,mCAGMS,GACXF,KAAKC,SAAS,CAChBlB,MAAO,GACRC,OAAQ,O,yCAMH,IAAImB,EAAO,8EACPC,EAAYC,mBAAmB,IAAML,KAAKb,MAAMC,aAAe,IAAMY,KAAKb,MAAME,eAEpFiB,QAAQC,IAAIJ,EAAOC,GACnBJ,KAAKC,SAAS,CACVX,OAAQa,EAAOC,M,+BAOnB,OACE,yBAAKI,GAAG,WACR,yBAAKA,GAAG,aACT,yBAAKC,UAAU,cACf,uBAAGA,UAAU,qBAAuB,0BAAMD,GAAG,QAAQR,KAAKb,MAAMC,eAEhE,yBAAKqB,UAAU,gBACf,0BAAMD,GAAG,UAAUR,KAAKb,MAAME,gBAC9B,yBAAKoB,UAAU,WACd,uBAAGC,KAAMV,KAAKb,MAAMG,OAAQmB,UAAU,SAASD,GAAG,cAAcG,MAAM,oBAAoBC,QAASZ,KAAKN,kBAAkB,uBAAGe,UAAU,mBAExI,4BAAQA,UAAU,SAASD,GAAG,YAAYI,QAASZ,KAAKP,gBAAxD,wB,GA7DiBoB,IAAMC,WA8E9BC,IAASC,OACN,kBAAC/B,EAAD,MACAgC,SAASC,eAAe,U","file":"static/js/main.95ac0c2d.chunk.js","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n\n    const quotes = [\n    {\n        quote: 'Let us always meet each other with smile, for the smile is the beginning of love.',\n        author: 'Mother Teresa'\n\n    },\n    {\n        quote: 'I have decided to stick with love. Hate is too great a burden to bear.',\n        author: 'Martin Luther King, Jr.'\n    },\n    {\n        quote: 'Kindness in words creates confidence. Kindness in thinking creates profoundness. Kindness in giving creates love.',\n        author: 'Lao Tzu'\n    },\n    {\n        quote: 'Being deeply loved by someone gives you strength, while loving someone deeply gives you courage.',\n        author: 'Lao Tzu'\n    },\n    {\n        quote: 'We love life, not because we are used to living but because we are used to loving.',\n        author: 'Friedrich Nietzsche'\n    },\n    {\n        quote: 'Love is the beauty of the soul.',\n        author: 'Saint Augustine'\n    },\n    {\n        quote: 'Keep love in your heart. A life without it is like a sunless garden when the flowers are dead.',\n        author: 'Oscar Wilde'\n    },\n    {\n        quote: 'If your heart is a volcano, how shall you expect flowers to bloom?',\n        author: 'Khalil Gibran'\n    },\n    {\n        quote: 'The course of true love never did run smooth.',\n        author: 'William Shakespeare'\n    },\n    {\n        quote: 'A new command I give you: Love one another. As I have loved you, so you must love one another.',\n        author: 'Jesus Christ'\n    },\n    {\n        quote: 'You have everything needed for the extravagant journey that is your life.',\n        author: 'Carlos Castaneda'\n    }\n    ];\n\n    class MyApp extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n\tcurrentQuote: '',\n\tcurrentAuthor: '',\n    attrib: ''\n   }\n   \n      this.handleChange = this.handleChange.bind(this);\n      this.getRandomQuote = this.getRandomQuote.bind(this);\n      this.encodeForTwitter = this.encodeForTwitter.bind(this);\n\n  }\n\n\ngetRandomQuote() {\n    let curQuote = quotes[Math.floor(Math.random() * quotes.length)]\n    this.setState({\n    currentQuote: curQuote.quote,\n    currentAuthor: curQuote.author\n    });\n\n}\n\ncomponentDidMount() {\n    this.getRandomQuote();\n}\n\n  handleChange(event) {\n    this.setState({\n \tquote: '',\n\tauthor: ''\n\n    });\n  }\n  \n  encodeForTwitter() {\n      let attr = 'https://twitter.com/intent/tweet?hashtags=quotes&related=freecodecamp&text=';\n      let addString = encodeURIComponent('\"' + this.state.currentQuote + '\"' + this.state.currentAuthor);\n      \n      console.log(attr + addString);\n      this.setState({\n          attrib: attr + addString\n      });\n \n   }\n   \n   render() {\n          \n      return (\n        <div id='wrapper'>\n        <div id='quote-box'>\n       <div className='quote-text'>\n       <i className='fa fa-quote-left'></i><span id='text'>{this.state.currentQuote}</span>\n       </div>\n       <div className='quote-author'>\n       <span id='author'>{this.state.currentAuthor}</span></div>\n       <div className='buttons'>\n        <a href={this.state.attrib} className='button' id='tweet-quote' title='Tweet this quote!' onClick={this.encodeForTwitter}><i className='fa fa-twitter'></i>\n        </a>\n       <button className='button' id='new-quote' onClick={this.getRandomQuote}>\n          Get New Quote\n        </button>        \n       </div>\n       \n        \n      </div>\n      </div>\n \n    );\n  }\n};\n\n\n\n\n\nReactDOM.render(\n   <MyApp />,\n   document.getElementById('root')\n );\n"],"sourceRoot":""}